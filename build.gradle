group 'alexanders.mods.lop'
version '0.7'

buildscript {
    ext.kotlin_version = '1.1.2-5'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = "de.ellpeck.rockbottom.Launcher"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://maven.chaosfield.at'
    }
}

dependencies {
    compile group: 'org.slick2d', name: 'slick2d-core', version: '1.0.2'
    compile group: 'io.netty', name: 'netty-all', version: '4.1.11.Final'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.9'
    compile group: 'de.ellpeck.rockbottom', name: 'RockBottomAPI', version: '0.0.2-+'
    runtime fileTree("./gamedata")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

task createIntelliJRuns(){
    def file = new File("$projectDir", ".idea" + File.separator + "runConfigurations" + File.separator + "Launch RockBottom.xml")
    if(!file.exists()){
        file.getParentFile().mkdirs()
        file.createNewFile()
    }
    file.setText("<component name=\"ProjectRunConfigurationManager\">\n" +
            "  <configuration default=\"false\" name=\"Launch RockBottom\" type=\"Application\" factoryName=\"Application\">\n" +
            "    <extension name=\"coverage\" enabled=\"false\" merge=\"false\" sample_coverage=\"true\" runner=\"idea\" />\n" +
            "    <option name=\"MAIN_CLASS_NAME\" value=\"de.ellpeck.rockbottom.Launcher\" />\n" +
            "    <option name=\"VM_PARAMETERS\" value=\"\" />\n" +
            "    <option name=\"PROGRAM_PARAMETERS\" value=\"--unpackedModsDir ./build/classes/main\" />\n" +
            "    <option name=\"WORKING_DIRECTORY\" value=\"file://\$PROJECT_DIR\$\" />\n" +
            "    <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"false\" />\n" +
            "    <option name=\"ALTERNATIVE_JRE_PATH\" />\n" +
            "    <option name=\"ENABLE_SWING_INSPECTOR\" value=\"false\" />\n" +
            "    <option name=\"ENV_VARIABLES\" />\n" +
            "    <option name=\"PASS_PARENT_ENVS\" value=\"true\" />\n" +
            "    <module name=\"$project.name\" />\n" +
            "    <envs />\n" +
            "    <method />\n" +
            "  </configuration>\n" +
            "</component>", "UTF-8")
}

task createEclipseRuns(){
    def file = new File("$projectDir", "Launcher.launch")
    if(!file.exists()){
        file.getParentFile().mkdirs()
        file.createNewFile()
    }
    file.setText("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n" +
            "<launchConfiguration type=\"org.eclipse.jdt.launching.localJavaApplication\">\n" +
            "<listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_PATHS\">\n" +
            "<listEntry value=\"/Launch RockBottom\"/>\n" +
            "</listAttribute>\n" +
            "<listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_TYPES\">\n" +
            "<listEntry value=\"4\"/>\n" +
            "</listAttribute>\n" +
            "<listAttribute key=\"org.eclipse.debug.ui.favoriteGroups\">\n" +
            "<listEntry value=\"org.eclipse.debug.ui.launchGroup.debug\"/>\n" +
            "<listEntry value=\"org.eclipse.debug.ui.launchGroup.run\"/>\n" +
            "</listAttribute>\n" +
            "<stringAttribute key=\"org.eclipse.jdt.launching.MAIN_TYPE\" value=\"de.ellpeck.rockbottom.Launcher\"/>\n" +
            "<stringAttribute key=\"org.eclipse.jdt.launching.PROGRAM_ARGUMENTS\" value=\"--unpackedModsDir ./build/classes/main\"/>\n" +
            "<stringAttribute key=\"org.eclipse.jdt.launching.PROJECT_ATTR\" value=\"$project.name\"/>\n" +
            "</launchConfiguration>", "UTF-8")
}

jar {
    from { configurations.compile.filter{it.name.contains("kotlin")}collect { it.isDirectory() ? it : zipTree(it) } }
}
